name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Cache yarn dependencies
      uses: actions/cache@v3
      with:
        path: |
          frontend/node_modules
          ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('frontend/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: Install dependencies
      working-directory: frontend
      run: yarn install --frozen-lockfile
    
    - name: Build web app
      working-directory: frontend
      run: yarn build
      env:
        CI: false
        REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL || 'https://debug-helper-41.preview.emergentagent.com' }}
    
    - name: Capacitor Sync
      working-directory: frontend
      run: npx cap sync android
    
    - name: Make gradlew executable
      working-directory: frontend/android
      run: chmod +x ./gradlew
    
    - name: Build Android Debug APK
      working-directory: frontend/android
      run: ./gradlew assembleDebug --no-daemon
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: frontend/android/app/build/outputs/apk/debug/app-debug.apk
        if-no-files-found: error
    
    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: softprops/action-gh-release@v1
      with:
        files: frontend/android/app/build/outputs/apk/debug/app-debug.apk
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
