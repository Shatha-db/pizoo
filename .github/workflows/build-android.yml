name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Node/Yarn للفرونت
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack (Yarn)
        run: corepack enable

      # JDK 17 + كاش Gradle
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # كاش node_modules للفرونت
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install --frozen-lockfile

      - name: Build Web App
        working-directory: ./frontend
        env:
          # قلل تحذيرات CI الافتراضية للبناء
          CI: false
          DISABLE_ESLINT_PLUGIN: true
          GENERATE_SOURCEMAP: false
          REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL || 'https://debug-helper-41.preview.emergentagent.com' }}
        run: yarn build

      - name: Sync Capacitor (Android)
        working-directory: ./frontend
        run: npx cap sync android

      # ---------------------------
      # خطة إنقاذ للـ Gradle Wrapper
      # ---------------------------
      - name: Ensure Gradle Wrapper exists (fallback)
        working-directory: ./frontend/android
        run: |
          if [ ! -f gradlew ] || [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "Gradle wrapper missing. Installing Gradle and generating wrapper..."
            sudo apt-get update
            sudo apt-get install -y gradle
            gradle wrapper
          fi

      - name: Make gradlew executable
        working-directory: ./frontend/android
        run: git update-index --chmod=+x gradlew || true && chmod +x ./gradlew

      - name: Build Android Debug APK
        working-directory: ./frontend/android
        run: ./gradlew assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: frontend/android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
          retention-days: 30

      # اختياري: إنشاء Release عند الدفع على main/master
      - name: Create GitHub Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: softprops/action-gh-release@v2
        with:
          files: frontend/android/app/build/outputs/apk/debug/app-debug.apk
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
